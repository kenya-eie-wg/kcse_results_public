ggplot(aes(x =  area, y = increase, colour = area)) +
geom_boxplot(size = .7) +
geom_point(size = 2, alpha = .5) +
scale_colour_manual(values = c("salmon", "blue2")) +
scale_y_continuous(labels = percent) +
facet_wrap(~ is_stem) +
labs(x = "",
y = "% increase in scores",
title = "Changes in scores in Dadaab, Kakuma and Kalobeyei, 2018-2022") +
theme(legend.position = "none",
strip.background = element_rect(fill = "black"),
strip.text = element_text(colour = "white", face = "bold"),
axis.text.x = element_text(size = 10))
summary_flat %>%
ggplot(aes(x =  area, y = increase, colour = area)) +
geom_boxplot(size = .7) +
geom_point(size = 2, alpha = .5) +
scale_colour_manual(values = c("salmon", "blue2")) +
scale_y_continuous(labels = percent) +
geom_hline(yintercept = 0, lty = 2, size = 1, alpha = .3) +
facet_wrap(~ is_stem) +
labs(x = "",
y = "% increase in scores",
title = "Changes in scores in Dadaab, Kakuma and Kalobeyei, 2018-2022") +
theme(legend.position = "none",
strip.background = element_rect(fill = "black"),
strip.text = element_text(colour = "white", face = "bold"),
axis.text.x = element_text(size = 10))
summary_flat %>%
ggplot(aes(x =  area, y = increase, colour = area)) +
geom_boxplot(size = .7) +
geom_point(size = 2, alpha = .5) +
scale_colour_manual(values = c("salmon", "blue2")) +
scale_y_continuous(labels = percent) +
geom_hline(yintercept = 0, lty = 2, size = 1, alpha = .3, colour = "grey") +
facet_wrap(~ is_stem) +
labs(x = "",
y = "% increase in scores",
title = "Changes in scores in Dadaab, Kakuma and Kalobeyei, 2018-2022") +
theme(legend.position = "none",
strip.background = element_rect(fill = "black"),
strip.text = element_text(colour = "white", face = "bold"),
axis.text.x = element_text(size = 10))
summary_flat %>%
ggplot(aes(x =  area, y = increase, colour = area)) +
geom_boxplot(size = .7) +
geom_point(size = 2, alpha = .5) +
scale_colour_manual(values = c("salmon", "blue2")) +
scale_y_continuous(labels = percent) +
geom_hline(yintercept = 0, lty = 2, size = 1, alpha = .4, colour = "grey") +
facet_wrap(~ is_stem) +
labs(x = "",
y = "% increase in scores",
title = "Changes in scores in Dadaab, Kakuma and Kalobeyei, 2018-2022") +
theme(legend.position = "none",
strip.background = element_rect(fill = "black"),
strip.text = element_text(colour = "white", face = "bold"),
axis.text.x = element_text(size = 10))
summary_flat %>%
ggplot(aes(x =  area, y = increase, colour = area)) +
geom_boxplot(size = .7) +
geom_point(size = 2, alpha = .5) +
scale_colour_manual(values = c("salmon", "blue2")) +
scale_y_continuous(labels = percent) +
geom_hline(yintercept = 0, lty = 2, size = 1, alpha = .5, colour = "grey") +
facet_wrap(~ is_stem) +
labs(x = "",
y = "% increase in scores",
title = "Changes in scores in Dadaab, Kakuma and Kalobeyei, 2018-2022") +
theme(legend.position = "none",
strip.background = element_rect(fill = "black"),
strip.text = element_text(colour = "white", face = "bold"),
axis.text.x = element_text(size = 10))
summary_flat %>%
ggplot(aes(x =  area, y = increase, colour = area)) +
geom_hline(yintercept = 0, lty = 2, size = 1, alpha = .8, colour = "grey") +
geom_boxplot(size = .7) +
geom_point(size = 2, alpha = .5) +
scale_colour_manual(values = c("salmon", "blue2")) +
scale_y_continuous(labels = percent) +
facet_wrap(~ is_stem) +
labs(x = "",
y = "% increase in scores",
title = "Changes in scores in Dadaab, Kakuma and Kalobeyei, 2018-2022") +
theme(legend.position = "none",
strip.background = element_rect(fill = "black"),
strip.text = element_text(colour = "white", face = "bold"),
axis.text.x = element_text(size = 10))
summary_flat <- kcse %>%
mutate(area = ifelse(area != "dadaab", "Kakuma_Kalobeyei", "Dadaab")) %>%
filter(subject %out% c("maths_b",
"general_science",
"kenyan_sign_language")) %>%
group_by(year, area, subject, is_stem) %>%
summarise(score = mean(score, na.rm = TRUE)) %>%
rbind(
kk_2019_raw %>%
mutate(is_stem = ifelse(subject %in% c("biology", "chemistry", "computer_studies",
"general_science", "maths", "physics"),
"STEM", "non-STEM"),
area = ifelse(area == "kk", "Kakuma_Kalobeyei", area)) %>%
mutate(subtotal = number_candidates * score) %>%
group_by(year, subject, area, is_stem) %>%
summarise(subtotal = sum(subtotal),
count = sum(number_candidates)) %>%
mutate(score = subtotal / count) %>%
select(-subtotal, -count)
) %>%
pivot_wider(names_from = year, values_from = score, names_prefix = "year_") %>%
filter(!is.na(year_2018) & !is.na(year_2022) & year_2018 != 0) %>%
mutate(increase = (year_2022 - year_2018) / year_2018)
summary_flat
summary_flat %>% group_by(is_stem) %>%
summarise(increase = mean(increase, na.rm = TRUE))
summary_flat %>% group_by(is_stem) %>%
summarise(increase = round(mean(increase * 100, na.rm = TRUE), digits = 2))
summary_pc <- summary_flat %>% group_by(is_stem) %>%
summarise(increase = round(mean(increase * 100, na.rm = TRUE), digits = 2))
summary_pc <- summary_flat %>% group_by(is_stem) %>%
summarise(increase = round(mean(increase * 100, na.rm = TRUE), digits = 2))
summary_pc
r summary_pc %>% filter(is_stem == "non-STEM") %>% pull(increase)
summary_pc %>% filter(is_stem == "non-STEM") %>% pull(increase)
summary_pc %>% filter(is_stem == "STEM") %>% pull(increase)
kcse %>%
group_by(subject, year, is_stem) %>%
summarise(score = mean(score, na.rm = TRUE)) %>%
filter(subject %out% c("biology_for_the_blind",
"maths_b",
"general_science",
"kenyan_sign_language")) %>%
group_by(subject, is_stem) %>%
mutate(yoy_change = score - lag(score),
pc_change = yoy_change / score,
overall_change = score[year == 2022] - score[year == 2018],
pc_overall_change = overall_change / score[year == 2018]) %>%
filter(!is.na(yoy_change)) %>%
summarise(yoy_change = mean(yoy_change),
pc_change = mean(pc_change),
overall_change = mean(overall_change),
pc_overall_change = mean(pc_overall_change)) %>%
mutate(subject = str_replace_all(subject, "_", " ")) %>%
ggplot(aes(x = pc_overall_change,
y = fct_reorder(str_to_title(subject), pc_overall_change),
fill = is_stem)) +
geom_col() +
geom_text(aes(label = percent(pc_overall_change, accuracy = 1)),
hjust = "inward") +
scale_x_continuous(labels = percent) +
scale_fill_manual(values = c("darkgoldenrod3", "darkslategray4"),
breaks = c("STEM", "non-STEM")) +
labs(x = "% change between 2018 and 2022",
y = "",
title = "% change in mean subject scores between 2018 and 2022",)
kcse %>%
group_by(subject, year, is_stem) %>%
summarise(score = mean(score, na.rm = TRUE)) %>%
filter(subject %out% c("biology_for_the_blind",
"maths_b",
"general_science",
"kenyan_sign_language")) %>%
group_by(subject, is_stem) %>%
mutate(yoy_change = score - lag(score),
pc_change = yoy_change / score,
overall_change = score[year == 2022] - score[year == 2018],
pc_overall_change = overall_change / score[year == 2018]) %>%
filter(!is.na(yoy_change)) %>%
summarise(yoy_change = mean(yoy_change),
pc_change = mean(pc_change),
overall_change = mean(overall_change),
pc_overall_change = mean(pc_overall_change)) %>%
mutate(subject = str_replace_all(subject, "_", " ")) %>%
ggplot(aes(x = pc_overall_change,
y = fct_reorder(str_to_title(subject), pc_overall_change),
fill = is_stem)) +
geom_col() +
geom_text(aes(label = percent(pc_overall_change, accuracy = 1)),
hjust = "inward") +
scale_x_continuous(labels = percent) +
scale_fill_manual(values = c("darkgoldenrod3", "darkslategray4"),
breaks = c("STEM", "non-STEM")) +
labs(x = "% change between 2018 and 2022",
y = "",
title = "% change in mean subject scores between 2018 and 2022",
fill = "")
kcse %>%
group_by(subject, year, is_stem) %>%
summarise(score = mean(score, na.rm = TRUE)) %>%
filter(subject %out% c("maths_b",
"general_science",
"kenyan_sign_language")) %>%
group_by(subject, is_stem) %>%
mutate(yoy_change = score - lag(score),
pc_change = yoy_change / score,
overall_change = score[year == 2022] - score[year == 2018],
pc_overall_change = overall_change / score[year == 2018]) %>%
filter(!is.na(yoy_change)) %>%
summarise(yoy_change = mean(yoy_change),
pc_change = mean(pc_change),
overall_change = mean(overall_change),
pc_overall_change = mean(pc_overall_change)) %>%
mutate(subject = str_replace_all(subject, "_", " ")) %>%
ggplot(aes(x = pc_overall_change,
y = fct_reorder(str_to_title(subject), pc_overall_change),
fill = is_stem)) +
geom_col() +
geom_text(aes(label = percent(pc_overall_change, accuracy = 1)),
hjust = "inward") +
scale_x_continuous(labels = percent) +
scale_fill_manual(values = c("darkgoldenrod3", "darkslategray4"),
breaks = c("STEM", "non-STEM")) +
labs(x = "% change between 2018 and 2022",
y = "",
title = "% change in mean subject scores between 2018 and 2022",
fill = "")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(tidyverse)
library(readxl)
library(janitor)
library(viridis)
library(scales)
library(ggrepel)
library(plotly)
library(flextable)
theme_set(theme_light())
# Hopefully this allows the DT to show up
options(htmltools.preserve.raw = FALSE)
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
not_all_na <- function(x) any(!is.na(x))
not_any_na <- function(x) all(!is.na(x))
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM1") %>%
clean_names()
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
counties <- read_csv("./data/counties.csv") %>%
mutate(sex_modifier = fct_relevel(sex_modifier, c("male", "female", "total")),
county = recode(county, "national" = "National"))
kcse <- read_csv("./data/kcse.csv") %>%
mutate(no_mg = ifelse(mg %in% c("P", "U", "X", "Y"),
TRUE, FALSE),
subject = ifelse(subject == "biology_for_the_blind", "biology", subject),
area = recode(area,
"kk" = "kakuma")) %>%
mutate(is_stem = ifelse(subject %in% c("biology", "chemistry", "computer_studies",
"general_science", "maths", "physics"),
"STEM", "non-STEM"),
sex = ifelse(sex == "D-", NA_character_, sex))
kk_2019_raw <- read_csv("./data/kk_2019_raw.csv")
kk_2019_number_candidates <- read_csv("./data/kk_2019_number_candidates.csv")
score_convert<- tribble(~grade, ~score,
"A", 12,
"A-", 11,
"B+", 10,
"B", 9,
"B-", 8,
"C+", 7,
"C", 6,
"C-", 5,
"D+", 4,
"D", 3,
"D-", 2,
"E", 1,
"X", 0,
"U", 0,
"Y", 0,
"P", 0,
"W", 0)
kcse %>% filter(area == "dadaab" & !is.na(sex)) %>%
filter(agp > 0) %>%
group_by(year, sex) %>%
summarise(mean_agp = mean(agp, na.rm = TRUE)) %>%
ggplot(aes(x = year, y = mean_agp, colour = sex)) +
geom_line(size = 1) +
geom_text(aes(label = round(mean_agp, digits = 2)),
vjust = -.3, hjust = "inward") +
scale_colour_manual(values = c("#1fa187", "#440154")) +
facet_wrap(~ sex) +
labs(title = "Improvements in mean AGP across both sexes in Dadaab") +
theme(legend.position = "none",
strip.background = element_rect(fill = "black"),
strip.text = element_text(face = "bold", size = 8))
dadaab_mean_stem <- kcse %>%
filter(area == "dadaab" & !is.na(sex) & is_stem == "STEM" & year != 2019) %>%
group_by(year, sex) %>%
summarise(mean_stem_score = mean(score, na.rm = TRUE))
kcse %>%
filter(area == "dadaab" & !is.na(sex) & is_stem == "STEM" & year != 2019) %>%
ggplot(aes(x = score, colour = sex)) +
geom_density(size = .4, alpha = .3, adjust = 3) +
scale_colour_manual(values = c("#11b86c", "#a90ecf")) +
geom_vline(data = dadaab_mean_stem, aes(xintercept = mean_stem_score,
colour = sex),
lty = 2, size = .1, alpha = .8, show.legend = FALSE) +
scale_x_continuous(breaks = seq(0, 12, by = 1)) +
facet_wrap(~ year) +
theme(strip.background = element_rect(fill = "black"),
strip.text = element_text(face = "bold", size = 8),
plot.caption = element_text(hjust = .5)) +
guides(colour = guide_legend(override.aes = list(shape = 19))) +
labs(x = "Candidate STEM scores",
y = "Density",
title = "Distribution of mean STEM scores by year and sex",
subtitle = "Mean score by sex marked by dotted lines",
colour = "Sex",
caption = "2019 excluded due to small sample size")
score_convert
score_convert %>% glimpse
score_convert %>% transpose_df
score_convert %>% transpose_df() %>%
flextable() %>%
set_header_labels(label = "")
score_convert %>%
transpose_df() %>%
flextable() %>%
set_header_labels(label = "") %>%
delete(part = "header")
score_convert %>%
transpose_df() %>%
flextable() %>%
set_header_labels(label = "") %>%
delete_part(part = "header")
score_convert %>%
transpose_df() %>%
flextable() %>%
set_header_labels(label = "") %>%
delete_part(part = "header") %>%
theme_zebra()
score_convert %>%
transpose_df() %>%
select(-X:W) %>%
flextable() %>%
set_header_labels(label = "") %>%
delete_part(part = "header") %>%
theme_zebra()
score_convert %>%
transpose_df()
score_convert %>%
transpose_df() %>%
select(-`13`:`17`) %>%
flextable() %>%
set_header_labels(label = "") %>%
delete_part(part = "header") %>%
theme_zebra()
score_convert %>%
transpose_df()
score_convert %>%
transpose_df() %>%
select(`1`:`12`) %>%
flextable() %>%
set_header_labels(label = "") %>%
delete_part(part = "header") %>%
theme_zebra()
score_convert %>%
transpose_df() %>%
select(`1`:`12`) %>%
flextable() %>%
set_header_labels(label = "") %>%
delete_part(part = "header") %>%
theme_zebra() %>%
set_caption("Scores and letter grade equivalents")
score_convert %>%
transpose_df() %>%
select(`1`:`12`) %>%
flextable() %>%
set_header_labels(label = "") %>%
delete_part(part = "header") %>%
theme_classic()
score_convert %>%
transpose_df() %>%
select(`1`:`12`) %>%
flextable() %>%
set_header_labels(label = "") %>%
delete_part(part = "header") %>%
theme_classic() %>%
set_caption("Scores and letter grade equivalents")
score_convert %>%
transpose_df() %>%
select(`1`:`12`) %>%
flextable() %>%
set_header_labels(label = "") %>%
delete_part(part = "header") %>%
theme_apa() %>%
set_caption("Scores and letter grade equivalents")
score_convert %>%
transpose_df() %>%
select(`1`:`12`) %>%
flextable() %>%
set_header_labels(label = "") %>%
delete_part(part = "header") %>%
theme_booktabs() %>%
set_caption("Scores and letter grade equivalents")
score_convert %>%
transpose_df() %>%
select(`1`:`12`) %>%
flextable() %>%
set_header_labels(label = "") %>%
delete_part(part = "header") %>%
theme_alafoli() %>%
set_caption("Scores and letter grade equivalents")
score_convert %>%
transpose_df() %>%
select(`1`:`12`) %>%
flextable() %>%
set_header_labels(label = "") %>%
delete_part(part = "header") %>%
theme_vanilla() %>%
set_caption("Scores and letter grade equivalents")
kcse %>%
filter(area == "dadaab" & !is.na(sex) & is_stem == "STEM" & year != 2019) %>%
ggplot(aes(x = score, colour = sex)) +
geom_density(size = .4, alpha = .3, adjust = 3) +
scale_colour_manual(values = c("#11b86c", "#a90ecf")) +
geom_vline(data = dadaab_mean_stem, aes(xintercept = mean_stem_score,
colour = sex),
lty = 2, size = .1, alpha = .8, show.legend = FALSE) +
scale_x_continuous(breaks = seq(0, 12, by = 1)) +
facet_wrap(~ year) +
theme(strip.background = element_rect(fill = "black"),
strip.text = element_text(face = "bold", size = 8),
plot.caption = element_text(hjust = .5)) +
guides(colour = guide_legend(override.aes = list(shape = 19))) +
labs(x = "Candidate STEM scores",
y = "Density",
title = "Distribution of mean STEM scores by year and sex",
subtitle = "Mean score by sex marked by dotted lines",
colour = "Sex",
caption = "2019 excluded due to small sample size")
kcse %>%
filter(area == "dadaab" & !is.na(sex) & is_stem == "STEM" & year != 2019) %>%
group_by(year, sex) %>%
summarise(mean_stem_score = mean(score, na.rm = TRUE)) %>%
pivot_wider(names_from = sex, values_from = mean_stem_score) %>%
rename(Year = year) %>%
mutate(Year = factor(Year)) %>%
mutate_at(vars("Female", "Male"), ~ round(., digits = 3)) %>%
flextable() %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .4) %>%
set_caption("Mean STEM scores in Dadaab")
kcse %>%
filter(area == "dadaab") %>%
filter(!is.na(class)) %>%
filter(subject %out% c("maths_b",
"general_science",
"kenyan_sign_language")) %>%
group_by(year, school, sex, subject, is_stem) %>%
summarise(score = mean(score, na.rm = TRUE)) %>%
pivot_wider(names_from = year, values_from = score, names_prefix = "year_") %>%
filter(!is.na(year_2018) & !is.na(year_2022) & year_2018 != 0) %>%
mutate(increase = (year_2022 - year_2018) / year_2018) %>%
ggplot(aes(x =  is_stem, y = increase, colour = is_stem)) +
geom_boxplot(size = .7) +
geom_point(size = 2, alpha = .3) +
scale_colour_manual(values = c("darkgoldenrod3", "darkslategray4"),
breaks = c("STEM", "non-STEM")) +
facet_wrap(~ school) +
scale_y_continuous(labels = percent) +
labs(x = "",
y = "Increase in scores",
title = "Change in scores by school, 2018 - 2022") +
coord_cartesian(ylim = c(-1, 6)) +
theme(legend.position = "none",
strip.background = element_rect(fill = "black"),
strip.text = element_text(face = "bold"))
kcse %>%
filter(area == "dadaab") %>%
filter(!is.na(class)) %>%
filter(subject %out% c("maths_b",
"general_science",
"kenyan_sign_language")) %>%
group_by(year, school, sex, subject, is_stem) %>%
summarise(score = mean(score, na.rm = TRUE)) %>%
pivot_wider(names_from = year, values_from = score, names_prefix = "year_") %>%
filter(!is.na(year_2018) & !is.na(year_2022) & year_2018 != 0) %>%
mutate(increase = (year_2022 - year_2018) / year_2018) %>%
ggplot(aes(x =  is_stem, y = increase, colour = is_stem)) +
geom_boxplot(size = .7) +
geom_point(size = 2, alpha = .3) +
scale_colour_manual(values = c("darkgoldenrod3", "darkslategray4"),
breaks = c("STEM", "non-STEM")) +
facet_wrap(~ school) +
scale_y_continuous(labels = percent) +
labs(x = "",
y = "% Change in scores",
title = "Change in scores by school in Dadaab, 2018 - 2022") +
coord_cartesian(ylim = c(-1, 6)) +
theme(legend.position = "none",
strip.background = element_rect(fill = "black"),
strip.text = element_text(face = "bold"))
